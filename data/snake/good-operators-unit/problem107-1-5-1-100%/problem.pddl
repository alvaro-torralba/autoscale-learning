(define (problem snake-empty-3x4-1-5-5-107)
(:domain snake)
(:objects
    pos0-0 pos0-1 pos0-2 pos0-3 pos1-0 pos1-1 pos1-2 pos1-3 pos2-0 pos2-1 pos2-2 pos2-3
)
(:init
    (isAdjacent pos0-0 pos1-0)
 (isAdjacent pos0-0 pos0-1)
 (isAdjacent pos0-1 pos1-1)
 (isAdjacent pos0-1 pos0-2)
 (isAdjacent pos0-1 pos0-0)
 (isAdjacent pos0-2 pos1-2)
 (isAdjacent pos0-2 pos0-3)
 (isAdjacent pos0-2 pos0-1)
 (isAdjacent pos0-3 pos1-3)
 (isAdjacent pos0-3 pos0-2)
 (isAdjacent pos1-0 pos2-0)
 (isAdjacent pos1-0 pos1-1)
 (isAdjacent pos1-0 pos0-0)
 (isAdjacent pos1-1 pos2-1)
 (isAdjacent pos1-1 pos1-2)
 (isAdjacent pos1-1 pos0-1)
 (isAdjacent pos1-1 pos1-0)
 (isAdjacent pos1-2 pos2-2)
 (isAdjacent pos1-2 pos1-3)
 (isAdjacent pos1-2 pos0-2)
 (isAdjacent pos1-2 pos1-1)
 (isAdjacent pos1-3 pos2-3)
 (isAdjacent pos1-3 pos0-3)
 (isAdjacent pos1-3 pos1-2)
 (isAdjacent pos2-0 pos2-1)
 (isAdjacent pos2-0 pos1-0)
 (isAdjacent pos2-1 pos2-2)
 (isAdjacent pos2-1 pos1-1)
 (isAdjacent pos2-1 pos2-0)
 (isAdjacent pos2-2 pos2-3)
 (isAdjacent pos2-2 pos1-2)
 (isAdjacent pos2-2 pos2-1)
 (isAdjacent pos2-3 pos1-3)
 (isAdjacent pos2-3 pos2-2)
    (tailSnake pos2-0)
    (headSnake pos1-0)
    (nextSnake pos1-0 pos2-0)
    (blocked pos1-0)
 (blocked pos2-0)
    (spawn pos2-3)
 (nextSpawn pos0-3 dummyPoint)
 (nextSpawn pos2-3 pos1-2)
 (nextSpawn pos1-2 pos0-1)
 (nextSpawn pos0-1 pos1-1)
 (nextSpawn pos1-1 pos0-3)
    (isPoint pos2-1)
 (isPoint pos0-0)
 (isPoint pos0-2)
 (isPoint pos2-2)
 (isPoint pos1-3)
)
(:goal (and
    (not (isPoint pos2-1))
 (not (isPoint pos0-0))
 (not (isPoint pos0-2))
 (not (isPoint pos2-2))
 (not (isPoint pos1-3))
 (not (isPoint pos2-3))
 (not (isPoint pos1-2))
 (not (isPoint pos0-1))
 (not (isPoint pos1-1))
 (not (isPoint pos0-3))
))
)

